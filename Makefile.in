# Initial Version Copyright (C) 2010 eZuce, Inc., All Rights Reserved.
# Licensed to the User under the LGPL license.
# 
BUILDDIR = $(abspath @builddir@)
SRC = $(abspath @srcdir@)

PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_REVISION := $(shell $(SRC)/config/revision-gen @PACKAGE_VERSION@)

help-var.DISTRO=To run a command for a different target distro. Default: $(DISTRO). Examples: fedora centos suse
DISTRO=@DISTRO@

help-var.DISTRO_VER=To run a command for a different target version. Default: $(DISTRO_VER).
DISTRO_VER=@DISTRO_VER@

help-var.DISTRO_ARCH=To run a command for a different target version. Default: $(DISTRO_ARCH).
DISTRO_ARCH=@DISTRO_ARCH@

lowercase = $(shell echo $(1) | tr '[:upper:]' '[:lower:]')

# for each sipx-% target, define a variable for the corresponding project directory
PROJ =  $(filter $(all),$(subst ., ,$@))
proj = $(call lowercase,$(PROJ))

# find any matches of $(sipx) or $(lib) anywhere in a target string and expands it into multiple target that
# would follow the given target.  
# example:  foo.a.bar... becomes  foo.a.bar foo.b.bar foo.c.bar
after = $(shell echo $2 | sed 's|\(.*\)\($1.*\)|\2|g')
..._sipx_target = $(strip $(foreach Z,$(sipx),$(findstring $(Z), $@)))
..._sipx_list = $(call after,$(..._sipx_target),$(sipx))
..._sipx_expanded = $(foreach T,$(..._sipx_list),$(subst $(..._sipx_target),$(T),$*))
..._lib_target = $(strip $(foreach Z,$(lib),$(findstring $(Z), $@)))
..._lib_list = $(call after,$(..._lib_target),$(lib))
..._lib_expanded = $(foreach T,$(..._lib_list),$(subst $(..._lib_target),$(T),$*))

default-first-target : help;

sipx.% :
	$(MAKE) $(foreach P,$(sipx),$(P).$*)
lib.% :
	$(MAKE) $(foreach P,$(lib),$(P).$*)

help.{sipx,lib}.list=list all sipx components
lib.list sipx.list : %.list :
	@echo $($*)

include $(sort $(wildcard mak/*.mk))

help.*... = Do given sipXecs or dependency target AND all the sipXecs or dependency targets that would come after the given pacakge. Inclusive. Very useful when you want to pick-up the build where it last stopped. Use 'make {1|2}.list' to see the natural order of a list. Examples: 'make sipXconfig.check...' or 'make sipXconfig...'
%... :
	$(MAKE) $(..._sipx_expanded) $(..._lib_expanded)

help-values.{1} = Any sipXecs package. For all sipXecs packages use 'sipx'. Complete list of sipXecs packages : $(sipx)
help-values.{2} = Any dependency package. For all dependencies use 'lib'.  Complete list of dependencies : $(lib)

.PHONY: help
help:
	@echo -e "\nCOMMON TARGETS\n==================="
	@$(MAKE) --no-print-directory -s help.print
	@echo -e "\nALLOWED VALUES\n==================="
	@$(MAKE) --no-print-directory -s help-values.print
	@echo -e "\nSPECIAL VARIABLES\n==================="
	@$(MAKE) --no-print-directory -s help-var.print

help-values.print help.print help-var.print: %.print :
	@$(foreach H,$(filter $*.%,$(sort $(.VARIABLES))), \
	  echo "$$format_help" | Label="$(H:$*.%=%)" Text="$($(H))" bash;)

define format_help
MARGIN=18
WIDTH=`tput cols`
HELP_WIDTH=`echo $$[$${WIDTH} - $${MARGIN}]`
export TEXT=`echo "$${Text}" | fold -s -w $${HELP_WIDTH} | sed -e "2,10s|^|                  |g"`
export LABEL="$${Label}"
echo | awk '{printf("%-15s - %s\n", ENVIRON["LABEL"], ENVIRON["TEXT"]);}'
endef
export format_help



