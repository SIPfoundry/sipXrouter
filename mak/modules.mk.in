# Initial Version Copyright (C) 2010 eZuce, Inc., All Rights Reserved.
# Licensed to the User under the LGPL license.
# 
# order is import for some of these as afar as building dependencies first
# consult spec files for authority on dependencies before changing the order

# sort removes dups and should speed maketime
deps = $(filter-out $(lib_exclude_$(DISTRO_OS)_$(DISTRO_VER)),$(sort $(1) $(foreach D,$(1)_DEPS,$($(D)))))

mongodb_DEPS = $(call deps,js)
oss_core_DEPS = $(call deps,v8)
rubygem-net-sftp_DEPS = $(call deps,rubygem-net-ssh)
sipXportLib_DEPS = $(call deps,epel-release)
sipXtackLib_DEPS = $(call deps,sipXportLib)
sipXmediaLib_DEPS = $(call deps,sipXtackLib)
sipXmediaAdapterLib_DEPS = $(call deps,sipXmediaLib)
sipXcallLib_DEPS = $(call deps,sipXmediaAdapterLib)
sipXsupervisor_DEPS = $(call deps,sec cfengine rubygem-net-sftp)
sipXmongo_DEPS = $(call deps,mongodb sipXsupervisor)
sipXcommserverLib_DEPS = $(call deps,sipXsupervisor sipXtackLib sipXmongo)
sipXsqa_DEPS = $(call deps,hiredis sipXcommserverLib)
sipXsnmp_DEPS = $(call deps,net-snmp sipXsupervisor)
sipXpostgres_DEPS = $(call deps,sipXsupervisor)
sipXtunnel_DEPS = $(call deps,sipXsupervisor)
sipXdns_DEPS = $(call deps,sipXsupervisor)
sipXhttpd_DEPS = $(call deps,sipXsupervisor)
sipXcommons_DEPS = $(call deps,sipXsupervisor)
sipXrelay_DEPS = $(call deps,sipXcommserverLib sipXcommons)
sipXbridge_DEPS = $(call deps,sipXrelay)
sipXfreeSwitch_DEPS = $(call deps,freeswitch sipXcommserverLib)
sipXcdr_DEPS = $(call deps,ruby-dbi ruby-postgres sipXcommserverLib)
sipXacdStatistics_DEPS = $(call deps,ruby-dbi ruby-postgres sipXcommons)
sipXconfig_DEPS = $(call deps,sipXcommons sipXsupervisor sipXacdStatistics sipXcdr sipXpostgres sipXcommserverLib sipXhttpd sipXmongo)
sipXopenfire_DEPS = $(call deps,openfire sipXconfig)
sipXopenacd_DEPS = $(call deps,erlmongo OpenACD sipXconfig)
sipXcounterpath_DEPS = $(call deps,sipXconfig)
sipXaudiocodes_DEPS = $(call deps,sipXconfig)
sipXprompts_DEPS = $(call deps,sipXsupervisor)
sipXivr_DEPS = $(call deps,sipXconfig)
sipXproxy_DEPS = $(call deps,sipXcommserverLib)
sipXpublisher_DEPS = $(call deps,sipXcommserverLib)
sipXregistry_DEPS = $(call deps,sipXcommserverLib)
sipXpark_DEPS = $(call deps,sipXcallLib sipXcommserverLib)
sipXpage_DEPS = $(call deps,sipXcommserverLib sipXcommons)
sipXpolycom_DEPS = $(call deps,sipXconfig)
sipXrls_DEPS = $(call deps,sipXsqa sipXcallLib sipXcommserverLib)
sipXsaa_DEPS = $(call deps,sipXcallLib)
sipXhomer_DEPS = $(call deps,homer sipXsqa)
sipXsbc_DEPS = $(call deps,oss_core sipXsupervisor sipXconfig sipXsqa sipXregistry)
sipXrelease_DEPS =
sipXviewer_DEPS = $(call deps,nsis nsis-data)

# uc
sipXtest_DEPS = $(call deps,rrdtool)


sipx = \
  sipXportLib \
  sipXtackLib \
  sipXmediaLib \
  sipXmediaAdapterLib \
  sipXcallLib \
  sipXsupervisor \
  sipXmongo \
  sipXcommserverLib \
  sipXsqa \
  sipXsnmp \
  sipXpostgres \
  sipXtunnel \
  sipXdns \
  sipXhttpd \
  sipXcommons \
  sipXrelay \
  sipXbridge \
  sipXfreeSwitch \
  sipXcdr \
  sipXacdStatistics \
  sipXconfig \
  sipXopenfire \
  sipXcounterpath \
  sipXaudiocodes \
  sipXprompts \
  sipXivr \
  sipXproxy \
  sipXpublisher \
  sipXregistry \
  sipXpark \
  sipXpage \
  sipXpolycom \
  sipXrls \
  sipXsaa \
  sipXrelease

# re: ruby-postgres, there's a new one we should be using ruby-pgsql i 
# think it's called as ruby-postgres is obsoleted.
lib_all = \
  epel-release, \
  resiprocate \
  rubygem-file-tail \
  freeswitch \
  hiredis \
  net-snmp \
  homer \
  OpenACD \
  openfire \
  erlmongo \
  ruby-dbi \
  cfengine \
  oss_core \
  rrdtool \
  nsis \
  nsis-data \
  rubygem-net-ssh \
  rubygem-net-sftp \
  ruby-postgres \
  sec \
  js \
  v8 \
  mongodb

lib_exclude_centos_6 = \
  mongodb \
  js

lib_exclude_fedora_16 = \
  epel-release \
  rrdtool \
  nsis \
  nsis-data \
  rubygem-net-ssh \
  rubygem-net-sftp

lib_exclude_fedora_17 = \
  $(lib_exclude_fedora_16) \
  ruby-postgres \
  sec \
  js \
  v8 \
  mongodb

# ruby-postgres broken, but should be replaced with ruby-pg on
# all distros
$(foreach V,18 19 20 21 21 23,\
  $(eval lib_exclude_fedora_$(V) = $(lib_exclude_fedora_17)))

lib = $(filter-out $(lib_exclude_$(DISTRO_OS)_$(DISTRO_VER)),$(lib_all))

all =  $(lib) $(sipx) $(app)
