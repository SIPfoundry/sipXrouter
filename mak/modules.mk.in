# Initial Version Copyright (C) 2010 eZuce, Inc., All Rights Reserved.
# Licensed to the User under the LGPL license.
# 
# order is import for some of these as afar as building dependencies first
# consult spec files for authority on dependencies before changing the order

sipx = \
  sipXportLib \
  sipXtackLib \
  sipXmediaLib \
  sipXmediaAdapterLib \
  sipXcallLib \
  sipXcommserverLib \
  sipXcommons \
  sipXacd \
  sipXacdStatistics \
  sipXacccode \
  sipXrelay \
  sipXbridge \
  sipXrest \
  sipXcallController \
  sipXcdrLog \
  sipXfreeSwitch \
  sipXcdr \
  sipXtools \
  sipXpark \
  sipXpresence \
  sipXrls \
  sipXpbx \
  sipXconfig \
  sipXopenfire \
  sipXaudiocodes \
  sipXimbot \
  sipXivr \
  sipXpage \
  sipXprovision \
  sipXproxy \
  sipXpublisher \
  sipXrecording \
  sipXregistry \
  sipXsaa \
  sipXsupervisor \
  sipXopenacd \
  sipXecs \
  sipXaastra \
  sipXcisco \
  sipXclearone \
  sipXcounterpath \
  sipXgtek \
  sipXhitachi \
  sipXipdialog \
  sipXisphone \
  sipXkarel \
  sipXnortel \
  sipXlg-nortel \
  sipXmitel \
  sipXpolycom \
  sipXsnom \
  sipXunidata \
  sipXgrandstream \
  sipXpreflight \
  sipXviewer

lang = \
  sipXlang-abitibi-fr_CA \
  sipXlang-ch \
  sipXlang-cs \
  sipXlang-de \
  sipXlang-en_GB \
  sipXlang-es \
  sipXlang-fr_CA \
  sipXlang-fr \
  sipXlang-it \
  sipXlang-ja \
  sipXlang-es_MX \
  sipXlang-nl \
  sipXlang-pl \
  sipXlang-pt_BR \
  sipXlang-zh

lib_common = \
  rubygem-file-tail \
  freeswitch \
  js \
  mongo \
  OpenACD \
  erlmongo \
  sipx-openfire \
  ruby-dbi \
  ruby-postgres \
  cfengine

$(foreach V,11 12 13 14 15 16 17 18 19 20,$(eval lib_fedora_$(V) = $(lib_common)))

# rsyslog is really for RHEL 5.3-ish, CentOS already has it
lib_centos_5 = \
  rubygems \
  erlang \
  scons \
  boost-jam \
  boost \
  $(lib_common) \
  rsyslog \
  cppunit \
  nsis \
  nsis-data \
  rrdtool \
  xerces-c \
  stunnel

lib_centos_6 = \
  epel-release \
  $(lib_common) \
  nsis \
  nsis-data

lib = $(lib_$(DISTRO_OS)_$(DISTRO_VER))

all =  $(lib) $(sipx) $(lang)
