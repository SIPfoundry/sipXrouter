MOCK_RESULTS_DIR = rpm-results
GIT_ID = $(shell git log -1 --format="%h %ci" -1 HEAD | sed -e 's|:|-|g'|cut -d\  -f 1)
# TODO: Determine RELEASE_ID automatically
RELEASE_ID = 1.$(GIT_ID)
MOCK_INIT = mock -r @MOCK_TARGET_PLATFORM@ --init
MOCK_REBUILD = mock -r @MOCK_TARGET_PLATFORM@ --no-clean --no-cleanup-after --resultdir=$(MOCK_RESULTS_DIR) --rebuild
MOCK_INSTALLDEPS = mock -r @MOCK_TARGET_PLATFORM@ --resultdir=$(MOCK_RESULTS_DIR) --installdeps
MOCK_CLEAR = mock -r @MOCK_TARGET_PLATFORM@ --resultdir=$(MOCK_RESULTS_DIR) --scrub=yum-cache
RPM_DIST = @RPM_DIST@
MOCK_CHROOT_REPO = /var/lib/mock/@MOCK_TARGET_PLATFORM@/root/fruit

# strange: cannot use $(call lowercase,$(P)) inside an eval so copy in lowercase macro
$(foreach P,$(sipx),$(eval $(P)_SRPM = $(shell echo $(P) | tr A-Z a-z)-@PACKAGE_VERSION@-$(RELEASE_ID).src.rpm))
$(foreach P,$(sipx),$(eval $(P)_TAR = $(P)/$(shell echo $(P) | tr A-Z a-z)-@PACKAGE_VERSION@.tar.gz))

$(foreach P,$(lib),$(eval include $(SRC)/$(P)/.sipxecs.mk))

help.sipx.rpm = Experimental call to build rpms.
$(foreach T,$(sipx) $(lib),$(T).rpm) : %.rpm : %.clean-full %.autoreconf %.configure %.dist %.srpm %.mock;

help.sipx.srpm = Experimental call to build rpms
%.srpm :
	test -d @DOWNLOAD_LIB_CACHE@ || mkdir -p @DOWNLOAD_LIB_CACHE@
	if [ -n "$($(PROJ)_SPEC)" ]; then \
	  $(foreach S,$($(PROJ)_SOURCES),$(call CopySourceFile,$(S),@RPMBUILD_TOPDIR@/SOURCES)) \
	  rpmbuild -bs --nodeps --define='buildno $(RELEASE_ID)' $($(PROJ)_SPEC); \
	else \
	  rpmbuild -ts --nodeps --define='buildno $(RELEASE_ID)' $($(PROJ)_TAR); \
	fi
	cp @RPMBUILD_TOPDIR@/SRPMS/$($(PROJ)_SRPM) .

mock-clean :
	rm -rf $(MOCK_RESULTS_DIR)

mock-init :
	$(MOCK_INIT)

CopySourceFile = \
	if [ -f $1 ]; then \
	  cp $1 $2; \
	else \
	  if [ ! -f @DOWNLOAD_LIB_CACHE@/$(notdir $1) ]; then \
	    curl -o @DOWNLOAD_LIB_CACHE@/$(notdir $1) @DOWNLOAD_LIB_URL@/$(notdir $1); \
	  fi ;\
	  cp @DOWNLOAD_LIB_CACHE@/$(notdir $1) $2; \
	fi; \

#	$(MOCK_CLEAR)	
#	$(MOCK_INSTALLDEPS) $($(PROJ)_SRPM)
# launch a webserver to share build of deps with chroot'ed system.
%.mock :
	cd $(MOCK_RESULTS_DIR); createrepo .
	$(MOCK_REBUILD) -D 'buildno $(RELEASE_ID)' $($(PROJ)_SRPM)
