# Initial Version Copyright (C) 2010 eZuce, Inc., All Rights Reserved.
# Licensed to the User under the LGPL license.
# 
#
# Publishes rpms and ISOs to download.sipfoundry.org. 
#
SF_REMOTE_DIR = /vol/download/pub/sipXecs
SF_SSH_DOWNLOAD = download@download.sipfoundry.org
SF_TARGET_DIR = $(SF_REMOTE_DIR)/$(PACKAGE_VERSION)
SfCommand = ssh $(SF_SSH_DOWNLOAD) '$(1)'
SF_RSYNC_TARGET=$(SF_SSH_DOWNLOAD):
S3_BUCKET = s3://sipXecs-pub
REPO_FILES = \
	sipxecs-$(PACKAGE_VERSION)-centos.repo \
	sipxecs-$(PACKAGE_VERSION)-fedora.repo

##################
# R P M

help.publish-rpms = Push repo for $(TARGET_PLATFORM) version $(PACKAGE_VERSION) to sipfoundry download directory
publish-rpms : distro.all.repo $(REPO_FILES) publish-files

%.rpmlist :
	for f in "find @RPM_DIST_DIR@ -name '*.rpm'"; do \
	  rpm -qp --queryformat '%{name}\n' $$f; \
	  echo -n "$$f "; \
	done | sort > $@.tmp
	mv $@.tmp $@

# Compare the list that was first uploaded from this machine with the new list you're uploading. If there are
# any differences to the packages that are uploaded, complain and abort
publish-check-repo : expected.rpmlist
	$(MAKE) -B actual.rpmlist
	@if ! diff -u @RPM_DIST_DIR@/$(TARGET_PLATFORM).expected.rpmlist @RPM_DIST_DIR@/$(TARGET_PLATFORM).actual.rpmlist; then \
	  echo "\nDifferences in expected rpms. Please review then type 'rm @RPM_DIST_DIR@/$(TARGET_PLATFORM).expected.rpmlist' to override"; exit 1; \
	else \
	  echo "no differences found"; \
	fi

publish-files :
	$(call SfCommand, test -d $(SF_TARGET_DIR) || mkdir -p  $(SF_TARGET_DIR))
	rsync --delete --archive --no-owner --verbose @RPM_DIST_DIR@/ $(SF_RSYNC_TARGET)$(SF_TARGET_DIR)/
	rsync --archive --no-owner --verbose $(REPO_FILES) $(SF_RSYNC_TARGET)$(SF_REMOTE_DIR)/

%-centos.repo : TARGET_DISTRO=CentOS
%-fedora.repo : TARGET_DISTRO=Fedora
$(REPO_FILES) :
	echo "$$repofile_contents" > $@.tmp
	mv $@.tmp $@

##############
# I S O

help.publish-iso = Push ISO and md5 of ISO to SIPfoundry''s Amazon S3 account for download and rebuild webpage index
publish-iso : publish-iso-clean publish-iso-upload publish-update-downloads;

# Be very careful with this recipe, could delete entire s3 bucket if s3cmd del glob is wrong
publish-iso-clean :
	s3cmd del $(S3_BUCKET)/sipxecs-$(PACKAGE_VERSION)*

publish-iso-upload :
	find -maxdepth 1 \( -name '*.iso' -o -name '*.md5' \) -exec s3cmd put -P {} $(S3_BUCKET) \;

help.publish-update-downloads = Normally called automatically as part of ISO uploads, but this regenerates ISO html download page. If you \
  delete files manually in S3, you can safely rerun this as many times as you need to rebuild remote html page.
publish-update-downloads : torrent.index publish-iso-index;

publish-iso-index:
	echo $$PublishIsoIndexHtml | \
	  $(call SfCommand, m4 --include=$(SF_REMOTE_DIR)/.inc > $(SF_REMOTE_DIR)/ISO/index.html)

torrent.index:
	@s3cmd ls $(S3_BUCKET) | awk '{print $$4}' | \
	  sed 's,s3://\(.*\)/\(.*\),<a href="http://s3.amazonaws.com/\1/\2\?torrent">\2</a>,g' | \
	  $(call SfCommand, cat > $(SF_REMOTE_DIR)/.inc/torrent.index)
	@s3cmd ls $(S3_BUCKET) | awk '{print $$4}' | \
	  sed 's,s3://\(.*\)/\(.*\),<a href="http://s3.amazonaws.com/\1/\2\">\2</a>,g' | \
	  $(call SfCommand, cat > $(SF_REMOTE_DIR)/.inc/iso.index)

define PublishIsoIndexHtml
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
 <head>
  <title>sipXecs ISO downloads</title>
 </head>
 <body>
include(`header.html')
<h2>Torrents</h2>
<pre><img src="/icons/back.gif" alt="[DIR]" width="16" height="16"><a href="/pub/sipXecs">Parent Directory</a></pre>
<pre>include(`torrent.index')</pre>
<h2>Alternative to torrents</h2>
If you are having trouble using torrents you can use these downloads
<pre>include(`iso.index')
</pre>
include(`footer.html')
</body></html>
endef
export PublishIsoIndexHtml