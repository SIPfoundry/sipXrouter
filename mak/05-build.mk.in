help.reconf=Re-run original configure script with same arguments as before.
reconf :
	$(SRC)/configure @CONFIGURE_OPTIONS@

help.sipx.autoreconf=Run autoreconf on each project
%.autoreconf : 
	@echo $@
	cd $(SRC)/$(PROJ); \
	  autoreconf -if

help.sipx=Build all sipx components including autoreconf, configure, all and install targets
build sipx :
	$(MAKE) $(foreach P,$(sipx),$(P))

$(foreach T,$(sipx),$(T)) : % : %.autoreconf %.configure %.all-install ;

help.sipx.all-install=Run "make all install" in each target
$(foreach T,$(sipx),$(T).all-install) : %.all-install : %.all %.install ;

help.configure = Run configure on each project
%.configure : 
	test -d $(PROJ) || mkdir $(PROJ)
	cd $(PROJ); \
	  $(SRC)/$(PROJ)/configure --disable-option-checking @CONFIGURE_OPTIONS@

help.configure = Remove build ouptut project
$(foreach T,$(sipx) $(lib),$(T).clean-full) :
	! test -d $(PROJ) || rm -rf $(PROJ)

MAKE_COMMANDS = check install clean dist
$(foreach C,$(MAKE_COMMANDS) all,$(eval help.sipx.$(C)=Run make $(C) on each project))

$(foreach C,$(MAKE_COMMANDS),%.$(C)) :
	$(MAKE) -C $(PROJ) $(patsubst $(PROJ).%,%,$@)

# projects do not all have an "all" target, they probably should, until then, use
# no-target default
$(foreach C,all,$(foreach T,$(sipx),$(T).all)) :
	$(MAKE) -C $(PROJ)

help.sipx.update-version = Update all sipx components to the current version.
$(foreach T,$(sipx),$(T).update-version) :
	sed -i -e 's/\(AC_INIT(.*, \)[0-9.]\+\(.*\)/\1@PACKAGE_VERSION@\2/g' $(SRC)/$(PROJ)/configure.ac

REWRITE_BUILD_DEPS_CentOS_5 = \
	$(foreach P,$(sipx),-e '/$(P)/d') \
	-e 's/java-1_6_0-sun-devel/java-devel/' \
	-e '/docbook-xsl-stylesheets/d' \
	-e '/pwdutils/d' \
	-e '/apache2-devel/d' \
	-e '/libapr1-devel/d' \
	-e '/cron/d'

REWRITE_BUILD_DEPS_SUSE = \
	$(foreach P,$(sipx),-e '/$(P)/d') \
	-e 's/java-1_6_0-sun-devel/java-devel/' \
	-e '/docbook-style-xsl/d' \
	-e '/httpd-devel/d' \
	-e '/apr-devel/d' \
	-e '/vixiecron/d'

$(foreach T,10 11 12 13 14 15 16 17 18 19 20,$(eval BUILD_DEPS_Fedora_$(T) = $(REWRITE_BUILD_DEPS_CentOS_5)))

list-deps list-missing-deps :
	@$(MAKE) --no-print-directory $(foreach T,$(sipx),$(T).$@) | sort -u

help.list-missing-deps = List all dependencies to build package(s) that are not currently installed on this system.
$(foreach T,$(sipx),$(T).list-missing-deps) :
	@rpm -q rpm `$(MAKE) --no-print-directory $(PROJ).list-deps` | grep 'is not installed' | awk '{print $$2}'

help.list-deps = List all dependencies to build package(s).
$(foreach T,$(sipx),$(T).list-deps) :
	@grep BuildRequires: $(SRC)/$(PROJ)/$(PROJ).spec.in | awk '{print $$2}' | sed $(REWRITE_BUILD_DEPS_$(TARGET_PLATFORM)) | sort -u

repofile :
	@echo "$$repofile_contents"

define repofile_contents
[sipXecs]
name=sipXecs software for $(TARGET_DISTRO) $$releasever - $$basearch
baseurl=http://download.sipfoundry.org/pub/sipXecs/@PACKAGE_VERSION@/$(TARGET_DISTRO)_$$releasever/$$basearch
gpgcheck=0
endef
export repofile_contents
