#!@BASH@
#
# Copyright (C) 2011 eZuce Inc., certain elements licensed under a Contributor Agreement.
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the AGPL license.


Action=RUN
Status=0
Args=""
ConfigFile=@SIPX_CONFDIR@/mongo/mongod.conf
DbDir=@SIPX_VARDIR@/mongo
LogDir=@SIPX_LOGDIR@

while [ $# -ne 0 ]
do
    case ${1} in
        --configtest)
            Action=CONFIGTEST
            ;;

        --stop)
            Action=STOP
            ;;

        *)
            Args="$Args $1"
            ;;
    esac           

    shift # always consume 1
done

. @SIPX_LIBEXECDIR@/sipx-utils.sh || exit 1

pidfile="@SIPX_RUNDIR@/sipxmongod.pid"

case ${Action} in
   RUN)
     if [ ! -d "${DbDir}" ]; then
       mkdir -p "${DbDir}"
     fi
     if [ ! -d "${LogDir}" ]; then
       mkdir -p "${LogDir}"
     fi
     mongod --pidfilepath ${pidfile} -f "${ConfigFile}" ${Args}
     Pid=`cat ${pidfile}`
     # bash's "wait" won't work on process that are disowned by this tty so poll for pid process
     # so supervisor knows when process has stopped.
     while [ -e /proc/${Pid} ]; do sleep 2; done
     ;;

   STOP)
     sipx_stop mongod ${pidfile}
     ;;

   CONFIGTEST)
     sipx_config_exists "${ConfigFile}"
     Status=$((${Status} + $?))

     # Check that the log file is writable.
     logfile="@SIPX_LOGDIR@/sipxmongod.log"
     if [ -e $logfile -a ! -w $logfile ]
     then
         echo "Log file '$logfile' exists but is not writable by user '@SIPXPBXUSER@'." >&2
         Status=1
     fi
     ;;
esac

exit $Status
