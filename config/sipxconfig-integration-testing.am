include $(top_srcdir)/config/sipxconfig.am

sipxconfig_test_integration_core_PKGS = \
	$(sipxconfig_web_test_PKGS) \
	dbunit \
	easymock \
	easymockclassextension \
	jsonassert \
	junit \
	junitperf \
	org.json \
	p6spy \
	spring-mock \
	xml-apis \
	xmlunit \
	cxf-rt-transports-http-jetty

sipxconfig_web_test_PKGS = \
	$(sipxconfig_neoconf_PKGS) \
	ant \
	ant-launcher \
	backport-util-concurrent \
	c3p0 \
	cglib-nodep \
	commons-fileupload \
	commons-pool \
	ez-vcard \
	hivemind \
	hivemind-lib \
	jasper-compiler \
	javassist \
	jdom \	
	javax.servlet-api \
	javax.servlet.jsp-api \
	jta \
	not-yet-commons-ssl \
	ognl \
	rome \
	tapestry-annotations \
	tapestry-contrib \
	tapestry-framework \
	xpp3 \
	jackson-core \
	jackson-databind \
	jackson-annotations

sipxconfig_test_integration_PKGS = \
	$(sipxconfig_test_integration_core_PKGS) \
	cdr-bindings \
	sipxconfig-neoconf \
	sipxconfig-web

ant_PKGS = \
	ant \
	ant-launcher \
	postgresql \
	ant-contrib

ant_DEPS = $(call JavaDep,@SIPX_JAVADIR@/sipXcommons,$(ant_PKGS))
sipxconfig-reset-integration-test :
	if ! `$(PG_SQL) -l | grep SIPXCONFIG_TEST > /dev/null` ; then \
	  $(PG_CREATEDB) SIPXCONFIG_TEST; \
	fi
	cd $(SIPX_CONFDIR)/database; \
	  $(call JavaCommand,ant) org.apache.tools.ant.launch.Launcher \
	    -Dsipxconfig.db.name=SIPXCONFIG_TEST \
	    -Dsipxconfig.db.user=$(POSTGRESQL_USER) \
	    -Dlog.dir=$(abspath $(builddir)) \
	    -Dtmp.dir=$(abspath $(builddir)) \
	    -f database.xml unittest-reset

plugin-reset-integration-test :
	cd $(SIPX_CONFDIR)/database; \
	  $(call JavaCommand,ant) org.apache.tools.ant.launch.Launcher \
	    -Dsipxconfig.db.name=SIPXCONFIG_TEST \
	    -Dsipxconfig.db.user=$(POSTGRESQL_USER) \
	    -Dlog.dir=$(abspath $(builddir)) \
	    -Dtmp.dir=$(abspath $(builddir)) \
	    -f database.xml plugin-patches

javac-test : $(SIPXCONFIG_TEST_CONFIG_FILES)

SIPXCONFIG_TEST_CONFIG_FILES = test.properties sipxconfig.properties
# tip: to append to CLEANFILES, use CLEANFILES += A B C
CLEANFILES = $(SIPXCONFIG_TEST_CONFIG_FILES)

# code to call yum package manager was removed, force false
YUM_EXISTS = false

# force regen for fresh info
.PHONY: sipxconfig.properties
sipxconfig.properties :
	@$(call SearchAndReplace,$(SIPX_CONFDIR)/sipxconfig/sipxconfig.properties.install,$@.tmp,IS_TEST_MODE YUM_EXISTS)
	@echo "$$sipxconfig_properties" | tr -d '\011' >> $@.tmp
	mv $@.tmp $@

test.properties : DOMAIN=$(shell hostname -f)
# force regen for fresh info
.PHONY: test.properties
test.properties :
	@echo -e "$(subst $(space),\n,$(foreach V,local.etc.dir DOMAIN $(CommonVariablesNames),$(V)=$($(V))))" > $@

# customize spring beans for unit test environment, must include tab as first char otherwise
# automake treats it differently
define sipxconfig_properties
	domainManagerImpl.domainConfigFilename=$(abspath .)/domain-config
	dataSource.jdbcUrl=jdbc:postgresql://localhost/SIPXCONFIG_TEST
	cdrDataSource.jdbcUrl=jdbc:postgresql://localhost/SIPXCDR_TEST
	mongoDbFactory.connectionUrl=mongodb://127.0.0.1:27017
	sysdir.mongo_ns=_TEST
	setupManagerImpl.enabled=false
	domainManagerImpl.configuredDomain=example.org
	domainManagerImpl.configuredSipDomain=example.org
	domainManagerImpl.configuredRealm=example.org
	domainManagerImpl.configuredSecret=pHJhejhCcSy5nc+UfcMF2wMN
	domainManagerImpl.configuredFqdn=$(shell hostname)
	domainManagerImpl.configuredIp=127.0.0.1
	locationsManagerImpl.primaryFqdn=$(shell hostname)
	locationsManagerImpl.primaryIp=127.0.0.1
	mongoReplicaSetManager.primaryFqdn=$(shell hostname)
	conf.dir=$(SIPX_CONFDIR)
endef
export sipxconfig_properties
