# Copyright (C) 2011 eZuce Inc., certain elements licensed under a Contributor Agreement.
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the AGPL license.

#
# sipXregstrar configuration and process management
#

bundle agent sipxregistrar {
  methods:
    any::
      "sipxregistrard" usebundle => "sipxregistrar_config";
      "any" usebundle => "sipxregistrar_running";
}

bundle agent sipxregistrar_config {
  files:
    any::
      "$(sipx.SIPX_CONFDIR)/registrar-config"
        create => "true",
        perms => m("644"),
        edit_line => registrar_config_contents(),
        classes => if_repaired("restart_sipxregistrard");
}

bundle edit_line registrar_config_contents() {
  insert_lines:
    any::
      "$(sipx.SIPX_CFDATA)/$(sipx.location_id)/registrar-config.part1"
        insert_type => "file";
      "$(sipx.SIPX_CFDATA)/defaults/registrar-config.part2"
        insert_type => "file";
      "SIP_REGISTRAR_BIND_IP=$(sys.ipv4)";

  delete_lines:
    any::
      ".*";
}

bundle agent sipxregistrar_running {
  vars:
    any::
      "service_command" string => "$(sipx.SIPX_BINDIR)/sipregistrar";

  methods:
    any::
      "any" usebundle => find_sipxservice_by_command("$(service_command)","sipxregistrard_running");

  commands:
    sipxregistrard_running.!sipxregistrard::
      "$(sipx.SIPX_SERVICEDIR)/sipxregistrar"
        args => "stop";

    !sipxregistrard_running.sipxregistrard::
      "$(sipx.SIPX_SERVICEDIR)/sipxregistrar"
        args => "start";

    restart_sipxregistrard::
      "$(sipx.SIPX_SERVICEDIR)/sipxregistrar"
        args => "restart";
}
